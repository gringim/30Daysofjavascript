name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        major_pattern: "major:"
        minor_pattern: "feat:"
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version
    
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        
    - name: Build Docker Image
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker buildx create --use
        docker buildx inspect --bootstrap
          
        docker buildx build \
          --platform linux/amd64,linux/arm64,linux/arm/v7 \
          -t srgrillo/30daysoofjavascript:$NEW_VERSION \
          -t srgrillo/30daysoofjavascript:latest \
          .
            
    - name: Print Docker Images
      run: docker images

    - name: Push Docker Image
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker push srgrillo/30daysoofjavascript:$NEW_VERSION
        docker push srgrillo/30daysoofjavascript:latest


# ...
# (Lines 36 and 41 are now commented out, but you can remove the '#' to include them)
#
# - name: Build the Docker image
#   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
